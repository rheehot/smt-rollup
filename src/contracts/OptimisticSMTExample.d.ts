/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from 'bn.js';
import Contract, { contractOptions } from 'web3/eth/contract';
import { EventLog, Callback, EventEmitter } from 'web3/types';
import { TransactionObject, BlockType } from 'web3/eth/types';
import { ContractEvent } from './types';

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export class OptimisticSMTExample extends Contract {
  constructor(jsonInterface: any[], address?: string, options?: contractOptions);
  clone(): OptimisticSMTExample;
  methods: {
    propose(prev: string | number[], next: string | number[], mergedLeaves: string | number[], leaves: (string | number[])[]): TransactionObject<void>;

    initProof(): TransactionObject<void>;

    updateProof(leaves: (string | number[])[], siblings: (string | number[])[][]): TransactionObject<void>;

    verifyProposal(): TransactionObject<boolean>;
  };
  events: {
    allEvents: (options?: EventOptions, cb?: Callback<EventLog>) => EventEmitter;
  };
}
